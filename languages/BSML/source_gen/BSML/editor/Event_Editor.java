package BSML.editor;

/*Generated by MPS */

import jetbrains.mps.nodeEditor.DefaultNodeEditor;
import jetbrains.mps.openapi.editor.cells.EditorCell;
import jetbrains.mps.openapi.editor.EditorContext;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.nodeEditor.cells.EditorCell_Collection;
import jetbrains.mps.editor.runtime.style.StyleAttributes;
import jetbrains.mps.editor.runtime.style.FocusPolicy;
import jetbrains.mps.nodeEditor.cells.EditorCell_Constant;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import com.mbeddr.core.base.behavior.IConfigurationContainer__BehaviorDescriptor;
import com.mbeddr.core.buildconfig.behavior.BCHelper;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.nodeEditor.cellProviders.CellProviderWithRole;
import jetbrains.mps.lang.editor.cellProviders.PropertyCellProvider;
import jetbrains.mps.nodeEditor.EditorManager;
import jetbrains.mps.openapi.editor.style.Style;
import jetbrains.mps.editor.runtime.style.StyleImpl;
import jetbrains.mps.nodeEditor.cellProviders.AbstractCellListHandler;
import jetbrains.mps.nodeEditor.cellLayout.CellLayout_Indent;
import jetbrains.mps.lang.editor.cellProviders.RefNodeListHandler;
import jetbrains.mps.smodel.action.NodeFactoryManager;
import jetbrains.mps.openapi.editor.cells.CellActionType;
import jetbrains.mps.nodeEditor.cellActions.CellAction_DeleteNode;
import jetbrains.mps.openapi.editor.cells.DefaultSubstituteInfo;
import jetbrains.mps.nodeEditor.cellMenu.DefaultChildSubstituteInfo;
import jetbrains.mps.nodeEditor.cells.EditorCell_Property;
import jetbrains.mps.nodeEditor.cells.ModelAccessor;
import jetbrains.mps.util.EqualUtil;
import jetbrains.mps.editor.runtime.cells.EmptyCellAction;
import jetbrains.mps.lang.editor.cellProviders.SingleRoleCellProvider;
import org.jetbrains.mps.openapi.language.SContainmentLink;
import BSML.behavior.IEvent__BehaviorDescriptor;

public class Event_Editor extends DefaultNodeEditor {
  public EditorCell createEditorCell(EditorContext editorContext, SNode node) {
    return this.createCollection_ymj9mh_a(editorContext, node);
  }
  private EditorCell createCollection_ymj9mh_a(EditorContext editorContext, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createIndent2(editorContext, node);
    editorCell.setCellId("Collection_ymj9mh_a");
    editorCell.setBig(true);
    if (true) {
      editorCell.getStyle().set(StyleAttributes.FOCUS_POLICY, FocusPolicy.FIRST_EDITABLE_CELL);
    }
    if (renderingCondition_ymj9mh_a0a(node, editorContext)) {
      editorCell.addEditorCell(this.createConstant_ymj9mh_a0(editorContext, node));
    }
    if (renderingCondition_ymj9mh_a1a(node, editorContext)) {
      editorCell.addEditorCell(this.createConstant_ymj9mh_b0(editorContext, node));
    }
    editorCell.addEditorCell(this.createConstant_ymj9mh_c0(editorContext, node));
    editorCell.addEditorCell(this.createProperty_ymj9mh_d0(editorContext, node));
    editorCell.addEditorCell(this.createConstant_ymj9mh_e0(editorContext, node));
    editorCell.addEditorCell(this.createRefNodeList_ymj9mh_f0(editorContext, node));
    editorCell.addEditorCell(this.createConstant_ymj9mh_g0(editorContext, node));
    if (renderingCondition_ymj9mh_a7a(node, editorContext)) {
      editorCell.addEditorCell(this.createRefNode_ymj9mh_h0(editorContext, node));
    }
    editorCell.addEditorCell(this.createConstant_ymj9mh_i0(editorContext, node));
    return editorCell;
  }
  private EditorCell createConstant_ymj9mh_a0(EditorContext editorContext, SNode node) {
    EditorCell_Constant editorCell = new EditorCell_Constant(editorContext, node, "rendezvous");
    editorCell.setCellId("Constant_ymj9mh_a0");
    editorCell.setDefaultText("");
    return editorCell;
  }
  private static boolean renderingCondition_ymj9mh_a0a(SNode node, EditorContext editorContext) {
    SNode config = SNodeOperations.cast(IConfigurationContainer__BehaviorDescriptor.findItemOfType_id3R$6B6bL1DB.invoke(BCHelper.findBC(SNodeOperations.getModel(node)), MetaAdapterFactory.getConcept(0x181cb8f23d5e4aa9L, 0xb8cd2e496087f7c8L, 0x58d666a512918588L, "BSML.structure.StateMachineConfigItem").getDeclarationNode()), MetaAdapterFactory.getConcept(0x181cb8f23d5e4aa9L, 0xb8cd2e496087f7c8L, 0x58d666a512918588L, "BSML.structure.StateMachineConfigItem"));
    if (SPropertyOperations.hasValue(config, MetaAdapterFactory.getProperty(0x181cb8f23d5e4aa9L, 0xb8cd2e496087f7c8L, 0x58d666a512918588L, 0x58d666a51291858dL, "concurrency"), "1", "1")) {
      return SPropertyOperations.getBoolean(node, MetaAdapterFactory.getProperty(0x181cb8f23d5e4aa9L, 0xb8cd2e496087f7c8L, 0x58d666a512946882L, 0x58d666a51295b123L, "rendezvous"));
    }
    return false;
  }
  private EditorCell createConstant_ymj9mh_b0(EditorContext editorContext, SNode node) {
    EditorCell_Constant editorCell = new EditorCell_Constant(editorContext, node, "in");
    editorCell.setCellId("Constant_ymj9mh_b0");
    editorCell.setDefaultText("");
    return editorCell;
  }
  private static boolean renderingCondition_ymj9mh_a1a(SNode node, EditorContext editorContext) {
    SNode config = SNodeOperations.cast(IConfigurationContainer__BehaviorDescriptor.findItemOfType_id3R$6B6bL1DB.invoke(BCHelper.findBC(SNodeOperations.getModel(node)), MetaAdapterFactory.getConcept(0x181cb8f23d5e4aa9L, 0xb8cd2e496087f7c8L, 0x58d666a512918588L, "BSML.structure.StateMachineConfigItem").getDeclarationNode()), MetaAdapterFactory.getConcept(0x181cb8f23d5e4aa9L, 0xb8cd2e496087f7c8L, 0x58d666a512918588L, "BSML.structure.StateMachineConfigItem"));
    if (SPropertyOperations.hasValue(config, MetaAdapterFactory.getProperty(0x181cb8f23d5e4aa9L, 0xb8cd2e496087f7c8L, 0x58d666a512918588L, 0x58d666a512918590L, "externalInEvent"), "1", "0")) {
      return SPropertyOperations.getBoolean(node, MetaAdapterFactory.getProperty(0x181cb8f23d5e4aa9L, 0xb8cd2e496087f7c8L, 0x58d666a512946882L, 0x58d666a51295b121L, "in_event"));
    }
    return false;
  }
  private EditorCell createConstant_ymj9mh_c0(EditorContext editorContext, SNode node) {
    EditorCell_Constant editorCell = new EditorCell_Constant(editorContext, node, "event");
    editorCell.setCellId("Constant_ymj9mh_c0");
    editorCell.setDefaultText("");
    return editorCell;
  }
  private EditorCell createProperty_ymj9mh_d0(EditorContext editorContext, SNode node) {
    CellProviderWithRole provider = new PropertyCellProvider(node, editorContext);
    provider.setRole("name");
    provider.setNoTargetText("<no name>");
    EditorCell editorCell;
    editorCell = provider.createEditorCell(editorContext);
    editorCell.setCellId("property_name");
    editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());
    SNode attributeConcept = provider.getRoleAttribute();
    Class attributeKind = provider.getRoleAttributeClass();
    if (attributeConcept != null) {
      EditorManager manager = EditorManager.getInstanceFromContext(editorContext);
      return manager.createNodeRoleAttributeCell(attributeConcept, attributeKind, editorCell);
    } else
    return editorCell;
  }
  private EditorCell createConstant_ymj9mh_e0(EditorContext editorContext, SNode node) {
    EditorCell_Constant editorCell = new EditorCell_Constant(editorContext, node, "(");
    editorCell.setCellId("Constant_ymj9mh_e0");
    Style style = new StyleImpl();
    style.set(StyleAttributes.PUNCTUATION_LEFT, 0, true);
    style.set(StyleAttributes.PUNCTUATION_RIGHT, 0, true);
    style.set(StyleAttributes.SELECTABLE, 0, true);
    editorCell.getStyle().putAll(style);
    editorCell.setDefaultText("");
    return editorCell;
  }
  private EditorCell createRefNodeList_ymj9mh_f0(EditorContext editorContext, SNode node) {
    AbstractCellListHandler handler = new Event_Editor.argsListHandler_ymj9mh_f0(node, "args", editorContext);
    EditorCell_Collection editorCell = handler.createCells(editorContext, new CellLayout_Indent(), false);
    editorCell.setCellId("refNodeList_args");
    editorCell.setRole(handler.getElementRole());
    return editorCell;
  }
  private static class argsListHandler_ymj9mh_f0 extends RefNodeListHandler {
    public argsListHandler_ymj9mh_f0(SNode ownerNode, String childRole, EditorContext context) {
      super(ownerNode, childRole, context, false);
    }
    public SNode createNodeToInsert(EditorContext editorContext) {
      SNode listOwner = super.getOwner();
      return NodeFactoryManager.createNode(listOwner, editorContext, super.getElementRole());
    }
    public EditorCell createNodeCell(EditorContext editorContext, SNode elementNode) {
      EditorCell elementCell = super.createNodeCell(editorContext, elementNode);
      this.installElementCellActions(this.getOwner(), elementNode, elementCell, editorContext);
      return elementCell;
    }
    public EditorCell createEmptyCell(EditorContext editorContext) {
      EditorCell emptyCell = null;
      emptyCell = this.createEmptyCell_internal(editorContext, this.getOwner());
      this.installElementCellActions(super.getOwner(), null, emptyCell, editorContext);
      return emptyCell;
    }
    public EditorCell createEmptyCell_internal(EditorContext editorContext, SNode node) {
      return this.createReadOnlyModelAccessor_ymj9mh_a5a(editorContext, node);
    }
    public void installElementCellActions(SNode listOwner, SNode elementNode, EditorCell elementCell, EditorContext editorContext) {
      if (elementCell.getUserObject(AbstractCellListHandler.ELEMENT_CELL_ACTIONS_SET) == null) {
        elementCell.putUserObject(AbstractCellListHandler.ELEMENT_CELL_ACTIONS_SET, AbstractCellListHandler.ELEMENT_CELL_ACTIONS_SET);
        if (elementNode != null) {
          elementCell.setAction(CellActionType.DELETE, new CellAction_DeleteNode(elementNode, CellAction_DeleteNode.DeleteDirection.FORWARD));
          elementCell.setAction(CellActionType.BACKSPACE, new CellAction_DeleteNode(elementNode, CellAction_DeleteNode.DeleteDirection.BACKWARD));
        }
        if (elementCell.getSubstituteInfo() == null || elementCell.getSubstituteInfo() instanceof DefaultSubstituteInfo) {
          elementCell.setSubstituteInfo(new DefaultChildSubstituteInfo(listOwner, elementNode, super.getLinkDeclaration(), editorContext));
        }
      }
    }
    private EditorCell createReadOnlyModelAccessor_ymj9mh_a5a(final EditorContext editorContext, final SNode node) {
      EditorCell_Property editorCell = EditorCell_Property.create(editorContext, new ModelAccessor() {
        public String getText() {
          return "";
        }
        public void setText(String s) {
        }
        public boolean isValidText(String s) {
          return EqualUtil.equals(s, getText());
        }
      }, node);
      editorCell.setAction(CellActionType.DELETE, EmptyCellAction.getInstance());
      editorCell.setAction(CellActionType.BACKSPACE, EmptyCellAction.getInstance());
      editorCell.setCellId("ReadOnlyModelAccessor_ymj9mh_a5a");
      return editorCell;
    }
  }
  private EditorCell createConstant_ymj9mh_g0(EditorContext editorContext, SNode node) {
    EditorCell_Constant editorCell = new EditorCell_Constant(editorContext, node, ")");
    editorCell.setCellId("Constant_ymj9mh_g0");
    Style style = new StyleImpl();
    style.set(StyleAttributes.PUNCTUATION_LEFT, 0, true);
    editorCell.getStyle().putAll(style);
    editorCell.setDefaultText("");
    return editorCell;
  }
  private EditorCell createRefNode_ymj9mh_h0(EditorContext editorContext, SNode node) {
    SingleRoleCellProvider provider = new Event_Editor.bindingSingleRoleHandler_ymj9mh_h0(node, MetaAdapterFactory.getContainmentLink(0x181cb8f23d5e4aa9L, 0xb8cd2e496087f7c8L, 0x58d666a512946882L, 0x58d666a51295b12aL, "binding"), editorContext);
    return provider.createCell();
  }
  private class bindingSingleRoleHandler_ymj9mh_h0 extends SingleRoleCellProvider {
    public bindingSingleRoleHandler_ymj9mh_h0(SNode ownerNode, SContainmentLink containmentLink, EditorContext context) {
      super(ownerNode, containmentLink, context);
    }
    protected EditorCell createChildCell(SNode child) {
      EditorCell editorCell = super.createChildCell(child);
      installCellInfo(child, editorCell);
      return editorCell;
    }
    private void installCellInfo(SNode child, EditorCell editorCell) {
      editorCell.setSubstituteInfo(new DefaultChildSubstituteInfo(myOwnerNode, myContainmentLink.getDeclarationNode(), myEditorContext));
      if (editorCell.getRole() == null) {
        editorCell.setRole("binding");
      }
    }
    @Override
    protected EditorCell createEmptyCell() {
      EditorCell editorCell = super.createEmptyCell();
      editorCell.setCellId("empty_binding");
      installCellInfo(null, editorCell);
      return editorCell;
    }
    protected String getNoTargetText() {
      return "<no binding>";
    }
  }
  private static boolean renderingCondition_ymj9mh_a7a(SNode node, EditorContext editorContext) {
    return (IEvent__BehaviorDescriptor.binding_id5zmpEki_836.invoke(node) != null);
  }
  private EditorCell createConstant_ymj9mh_i0(EditorContext editorContext, SNode node) {
    EditorCell_Constant editorCell = new EditorCell_Constant(editorContext, node, ";");
    editorCell.setCellId("Constant_ymj9mh_i0");
    Style style = new StyleImpl();
    style.set(StyleAttributes.PUNCTUATION_LEFT, 0, true);
    style.set(StyleAttributes.INDENT_LAYOUT_NEW_LINE, 0, true);
    editorCell.getStyle().putAll(style);
    editorCell.setDefaultText("");
    return editorCell;
  }
}
