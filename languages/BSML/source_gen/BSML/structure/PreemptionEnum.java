package BSML.structure;

/*Generated by MPS */

import java.util.List;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import java.util.LinkedList;

public enum PreemptionEnum {
  _0("PREEMPTIVE", 0),
  _1("NON-PREEMPTIVE", 1);

  private final String myName;
  public String getName() {
    return myName;
  }
  private final int myValue;
  PreemptionEnum(String name, int value) {
    myName = name;
    myValue = value;
  }
  public int getValue() {
    return myValue;
  }
  public String getValueAsString() {
    return Integer.toString(myValue);
  }
  public static List<PreemptionEnum> getConstants() {
    List<PreemptionEnum> list = ListSequence.fromList(new LinkedList<PreemptionEnum>());
    ListSequence.fromList(list).addElement(PreemptionEnum._0);
    ListSequence.fromList(list).addElement(PreemptionEnum._1);
    return list;
  }
  public static PreemptionEnum getDefault() {
    return PreemptionEnum._0;
  }
  public static PreemptionEnum parseValue(String value) {
    if (value == null) {
      return PreemptionEnum.getDefault();
    }
    if (value.equals(PreemptionEnum._0.getValueAsString())) {
      return PreemptionEnum._0;
    }
    if (value.equals(PreemptionEnum._1.getValueAsString())) {
      return PreemptionEnum._1;
    }
    return PreemptionEnum.getDefault();
  }
}
