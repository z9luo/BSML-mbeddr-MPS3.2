package BSML.structure;

/*Generated by MPS */

import java.util.List;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import java.util.LinkedList;

public enum ConcurrencyEnum {
  _0("SINGLE", 0),
  _1("MANY", 1);

  private final String myName;
  public String getName() {
    return myName;
  }
  private final int myValue;
  ConcurrencyEnum(String name, int value) {
    myName = name;
    myValue = value;
  }
  public int getValue() {
    return myValue;
  }
  public String getValueAsString() {
    return Integer.toString(myValue);
  }
  public static List<ConcurrencyEnum> getConstants() {
    List<ConcurrencyEnum> list = ListSequence.fromList(new LinkedList<ConcurrencyEnum>());
    ListSequence.fromList(list).addElement(ConcurrencyEnum._0);
    ListSequence.fromList(list).addElement(ConcurrencyEnum._1);
    return list;
  }
  public static ConcurrencyEnum getDefault() {
    return ConcurrencyEnum._1;
  }
  public static ConcurrencyEnum parseValue(String value) {
    if (value == null) {
      return ConcurrencyEnum.getDefault();
    }
    if (value.equals(ConcurrencyEnum._0.getValueAsString())) {
      return ConcurrencyEnum._0;
    }
    if (value.equals(ConcurrencyEnum._1.getValueAsString())) {
      return ConcurrencyEnum._1;
    }
    return ConcurrencyEnum.getDefault();
  }
}
