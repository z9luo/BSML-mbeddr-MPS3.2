package BSML.behavior;

/*Generated by MPS */

import jetbrains.mps.core.aspects.behaviour.BaseBHDescriptor;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import jetbrains.mps.core.aspects.behaviour.api.BehaviorRegistry;
import jetbrains.mps.smodel.language.ConceptRegistry;
import jetbrains.mps.core.aspects.behaviour.api.SMethod;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.core.aspects.behaviour.SMethodBuilder;
import jetbrains.mps.core.aspects.behaviour.SJavaCompoundTypeImpl;
import jetbrains.mps.core.aspects.behaviour.SModifiersImpl;
import jetbrains.mps.core.aspects.behaviour.AccessPrivileges;
import java.util.List;
import java.util.Arrays;
import org.jetbrains.annotations.NotNull;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.core.aspects.behaviour.api.SConstructor;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.core.aspects.behaviour.api.BHMethodNotFoundException;

public final class Event__BehaviorDescriptor extends BaseBHDescriptor {
  private static final SAbstractConcept CONCEPT = MetaAdapterFactory.getConcept(0x181cb8f23d5e4aa9L, 0xb8cd2e496087f7c8L, 0x58d666a512946882L, "BSML.structure.Event");
  private static final BehaviorRegistry REGISTRY = ConceptRegistry.getInstance().getBehaviorRegistry();

  public static final SMethod<Iterable<SNode>> args_id5zmpEki_82Q = new SMethodBuilder<Iterable<SNode>>(new SJavaCompoundTypeImpl((Class<Iterable<SNode>>) ((Class) Object.class))).name("args").modifiers(SModifiersImpl.create(8, AccessPrivileges.PUBLIC)).concept(CONCEPT).id("5zmpEki_82Q").registry(REGISTRY).build();
  public static final SMethod<SNode> binding_id5zmpEki_836 = new SMethodBuilder<SNode>(new SJavaCompoundTypeImpl((Class<SNode>) ((Class) Object.class))).name("binding").modifiers(SModifiersImpl.create(8, AccessPrivileges.PUBLIC)).concept(CONCEPT).id("5zmpEki_836").registry(REGISTRY).build();
  public static final SMethod<Boolean> isInEvent_id5zmpEki_83s = new SMethodBuilder<Boolean>(new SJavaCompoundTypeImpl(Boolean.TYPE)).name("isInEvent").modifiers(SModifiersImpl.create(8, AccessPrivileges.PUBLIC)).concept(CONCEPT).id("5zmpEki_83s").registry(REGISTRY).build();
  public static final SMethod<Boolean> isOutEvent_id5zmpEki_83K = new SMethodBuilder<Boolean>(new SJavaCompoundTypeImpl(Boolean.TYPE)).name("isOutEvent").modifiers(SModifiersImpl.create(8, AccessPrivileges.PUBLIC)).concept(CONCEPT).id("5zmpEki_83K").registry(REGISTRY).build();
  public static final SMethod<Boolean> isRendezvousEvent_id5zmpEki_848 = new SMethodBuilder<Boolean>(new SJavaCompoundTypeImpl(Boolean.TYPE)).name("isRendezvousEvent").modifiers(SModifiersImpl.create(8, AccessPrivileges.PUBLIC)).concept(CONCEPT).id("5zmpEki_848").registry(REGISTRY).build();
  public static final SMethod<Iterable<SNode>> getUniquelyNamedElements_id4qSf1u1TRfj = new SMethodBuilder<Iterable<SNode>>(new SJavaCompoundTypeImpl((Class<Iterable<SNode>>) ((Class) Object.class))).name("getUniquelyNamedElements").modifiers(SModifiersImpl.create(8, AccessPrivileges.PUBLIC)).concept(CONCEPT).id("4qSf1u1TRfj").registry(REGISTRY).build();

  private static final List<SMethod<?>> BH_METHODS = Arrays.<SMethod<?>>asList(args_id5zmpEki_82Q, binding_id5zmpEki_836, isInEvent_id5zmpEki_83s, isOutEvent_id5zmpEki_83K, isRendezvousEvent_id5zmpEki_848, getUniquelyNamedElements_id4qSf1u1TRfj);

  private static void ___init___(@NotNull SNode __thisNode__) {
    SPropertyOperations.set(__thisNode__, MetaAdapterFactory.getProperty(0x181cb8f23d5e4aa9L, 0xb8cd2e496087f7c8L, 0x58d666a512946882L, 0x58d666a51295b121L, "in_event"), "" + (false));
    SPropertyOperations.set(__thisNode__, MetaAdapterFactory.getProperty(0x181cb8f23d5e4aa9L, 0xb8cd2e496087f7c8L, 0x58d666a512946882L, 0x58d666a51295b123L, "rendezvous"), "" + (false));
  }

  /*package*/ static Iterable<SNode> args_id5zmpEki_82Q(@NotNull SNode __thisNode__) {
    return SLinkOperations.getChildren(__thisNode__, MetaAdapterFactory.getContainmentLink(0x181cb8f23d5e4aa9L, 0xb8cd2e496087f7c8L, 0x58d666a512946882L, 0x58d666a51295b128L, "args"));
  }
  /*package*/ static SNode binding_id5zmpEki_836(@NotNull SNode __thisNode__) {
    return SLinkOperations.getTarget(__thisNode__, MetaAdapterFactory.getContainmentLink(0x181cb8f23d5e4aa9L, 0xb8cd2e496087f7c8L, 0x58d666a512946882L, 0x58d666a51295b12aL, "binding"));
  }
  /*package*/ static boolean isInEvent_id5zmpEki_83s(@NotNull SNode __thisNode__) {
    return SPropertyOperations.getBoolean(__thisNode__, MetaAdapterFactory.getProperty(0x181cb8f23d5e4aa9L, 0xb8cd2e496087f7c8L, 0x58d666a512946882L, 0x58d666a51295b121L, "in_event"));
  }
  /*package*/ static boolean isOutEvent_id5zmpEki_83K(@NotNull SNode __thisNode__) {
    return SLinkOperations.getTarget(__thisNode__, MetaAdapterFactory.getContainmentLink(0x181cb8f23d5e4aa9L, 0xb8cd2e496087f7c8L, 0x58d666a512946882L, 0x58d666a51295b12aL, "binding")) != null;
  }
  /*package*/ static boolean isRendezvousEvent_id5zmpEki_848(@NotNull SNode __thisNode__) {
    return SPropertyOperations.getBoolean(__thisNode__, MetaAdapterFactory.getProperty(0x181cb8f23d5e4aa9L, 0xb8cd2e496087f7c8L, 0x58d666a512946882L, 0x58d666a51295b123L, "rendezvous"));
  }
  /*package*/ static Iterable<SNode> getUniquelyNamedElements_id4qSf1u1TRfj(@NotNull SNode __thisNode__) {
    return ((Iterable<SNode>) IEvent__BehaviorDescriptor.args_id5zmpEki_82Q.invoke(__thisNode__));
  }

  /*package*/ Event__BehaviorDescriptor() {
    super(REGISTRY);
  }

  @Override
  protected void initNode(@NotNull SNode node, @NotNull SConstructor constructor, @Nullable Object[] parameters) {
    ___init___(node);
  }

  @Override
  protected <T> T invokeSpecial0(@NotNull SNode node, @NotNull SMethod<T> method, @Nullable Object[] parameters) {
    int methodIndex = BH_METHODS.indexOf(method);
    if (methodIndex < 0) {
      throw new BHMethodNotFoundException(this, method);
    }
    switch (methodIndex) {
      case 0:
        return (T) ((Iterable<SNode>) args_id5zmpEki_82Q(node));
      case 1:
        return (T) ((SNode) binding_id5zmpEki_836(node));
      case 2:
        return (T) ((Boolean) isInEvent_id5zmpEki_83s(node));
      case 3:
        return (T) ((Boolean) isOutEvent_id5zmpEki_83K(node));
      case 4:
        return (T) ((Boolean) isRendezvousEvent_id5zmpEki_848(node));
      case 5:
        return (T) ((Iterable<SNode>) getUniquelyNamedElements_id4qSf1u1TRfj(node));
      default:
        throw new BHMethodNotFoundException(this, method);
    }
  }

  @Override
  protected <T> T invokeSpecial0(@NotNull SAbstractConcept concept, @NotNull SMethod<T> method, @Nullable Object[] parameters) {
    int methodIndex = BH_METHODS.indexOf(method);
    if (methodIndex < 0) {
      throw new BHMethodNotFoundException(this, method);
    }
    switch (methodIndex) {
      default:
        throw new BHMethodNotFoundException(this, method);
    }
  }

  @NotNull
  @Override
  public List<SMethod<?>> getDeclaredMethods() {
    return BH_METHODS;
  }

  @NotNull
  @Override
  public SAbstractConcept getConcept() {
    return CONCEPT;
  }
}
