package BSML.typesystem;

/*Generated by MPS */

import jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime;
import jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.typesystem.inference.TypeCheckingContext;
import jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus;
import BSML.behavior.IEvent__BehaviorDescriptor;
import jetbrains.mps.internal.collections.runtime.Sequence;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import jetbrains.mps.errors.messageTargets.MessageTarget;
import jetbrains.mps.errors.messageTargets.NodeMessageTarget;
import jetbrains.mps.errors.IErrorReporter;
import com.mbeddr.core.base.behavior.IIdentifierNamedConcept__BehaviorDescriptor;
import com.mbeddr.core.expressions.behavior.Type__BehaviorDescriptor;
import org.jetbrains.mps.openapi.language.SAbstractConcept;

public class check_Event_NonTypesystemRule extends AbstractNonTypesystemRule_Runtime implements NonTypesystemRule_Runtime {
  public check_Event_NonTypesystemRule() {
  }
  public void applyRule(final SNode event, final TypeCheckingContext typeCheckingContext, IsApplicableStatus status) {
    if ((IEvent__BehaviorDescriptor.binding_id5zmpEki_836.invoke(event) != null)) {
      if (Sequence.fromIterable(IEvent__BehaviorDescriptor.args_id5zmpEki_82Q.invoke(event)).count() != ListSequence.fromList(SLinkOperations.getChildren(SLinkOperations.getTarget(IEvent__BehaviorDescriptor.binding_id5zmpEki_836.invoke(event), MetaAdapterFactory.getReferenceLink(0x181cb8f23d5e4aa9L, 0xb8cd2e496087f7c8L, 0x58d666a51294688dL, 0x58d666a5129adb04L, "binding")), MetaAdapterFactory.getContainmentLink(0x6d11763d483d4b2bL, 0x8efc09336c1b0001L, 0x707ac195dd5d51f2L, 0x4f39f90935e92f45L, "arguments"))).count()) {
        {
          MessageTarget errorTarget = new NodeMessageTarget();
          IErrorReporter _reporter_2309309498 = typeCheckingContext.reportTypeError(event, "wrong number of arguments: " + IIdentifierNamedConcept__BehaviorDescriptor.qualifiedName_id4JF77iuPCMH.invoke(SLinkOperations.getTarget(IEvent__BehaviorDescriptor.binding_id5zmpEki_836.invoke(event), MetaAdapterFactory.getReferenceLink(0x181cb8f23d5e4aa9L, 0xb8cd2e496087f7c8L, 0x58d666a51294688dL, 0x58d666a5129adb04L, "binding"))), "r:1fccc51a-c6c0-4f4f-ba25-37a53ba8fbed(BSML.typesystem)", "6401416779522449371", null, errorTarget);
        }
      }
      for (int i = 0; i < Sequence.fromIterable(IEvent__BehaviorDescriptor.args_id5zmpEki_82Q.invoke(event)).count(); i++) {
        if (!((boolean) Type__BehaviorDescriptor.isSubtypeOf_id1PWW75unXc0.invoke(SLinkOperations.getTarget((ListSequence.fromList(SLinkOperations.getChildren(event, MetaAdapterFactory.getContainmentLink(0x181cb8f23d5e4aa9L, 0xb8cd2e496087f7c8L, 0x58d666a512946882L, 0x58d666a51295b128L, "args"))).getElement(i)), MetaAdapterFactory.getContainmentLink(0x61c69711ed614850L, 0x81d97714ff227fb0L, 0x46a2a92ac61b183L, 0x46a2a92ac61b184L, "type")), SLinkOperations.getTarget(ListSequence.fromList(SLinkOperations.getChildren(SLinkOperations.getTarget(IEvent__BehaviorDescriptor.binding_id5zmpEki_836.invoke(event), MetaAdapterFactory.getReferenceLink(0x181cb8f23d5e4aa9L, 0xb8cd2e496087f7c8L, 0x58d666a51294688dL, 0x58d666a5129adb04L, "binding")), MetaAdapterFactory.getContainmentLink(0x6d11763d483d4b2bL, 0x8efc09336c1b0001L, 0x707ac195dd5d51f2L, 0x4f39f90935e92f45L, "arguments"))).getElement(i), MetaAdapterFactory.getContainmentLink(0x61c69711ed614850L, 0x81d97714ff227fb0L, 0x46a2a92ac61b183L, 0x46a2a92ac61b184L, "type"))))) {
          {
            MessageTarget errorTarget = new NodeMessageTarget();
            IErrorReporter _reporter_2309309498 = typeCheckingContext.reportTypeError(event, "wrong type of argument: " + SLinkOperations.getTarget(ListSequence.fromList(SLinkOperations.getChildren(event, MetaAdapterFactory.getContainmentLink(0x181cb8f23d5e4aa9L, 0xb8cd2e496087f7c8L, 0x58d666a512946882L, 0x58d666a51295b128L, "args"))).getElement(i), MetaAdapterFactory.getContainmentLink(0x61c69711ed614850L, 0x81d97714ff227fb0L, 0x46a2a92ac61b183L, 0x46a2a92ac61b184L, "type")) + "is not subtype of " + SLinkOperations.getTarget(ListSequence.fromList(SLinkOperations.getChildren(SLinkOperations.getTarget(IEvent__BehaviorDescriptor.binding_id5zmpEki_836.invoke(event), MetaAdapterFactory.getReferenceLink(0x181cb8f23d5e4aa9L, 0xb8cd2e496087f7c8L, 0x58d666a51294688dL, 0x58d666a5129adb04L, "binding")), MetaAdapterFactory.getContainmentLink(0x6d11763d483d4b2bL, 0x8efc09336c1b0001L, 0x707ac195dd5d51f2L, 0x4f39f90935e92f45L, "arguments"))).getElement(i), MetaAdapterFactory.getContainmentLink(0x61c69711ed614850L, 0x81d97714ff227fb0L, 0x46a2a92ac61b183L, 0x46a2a92ac61b184L, "type")), "r:1fccc51a-c6c0-4f4f-ba25-37a53ba8fbed(BSML.typesystem)", "6401416779522553497", null, errorTarget);
          }
        }
      }
    }
  }
  public SAbstractConcept getApplicableConcept() {
    return MetaAdapterFactory.getConcept(0x181cb8f23d5e4aa9L, 0xb8cd2e496087f7c8L, 0x58d666a512946882L, "BSML.structure.Event");
  }
  public IsApplicableStatus isApplicableAndPattern(SNode argument) {
    return new IsApplicableStatus(argument.getConcept().isSubConceptOf(getApplicableConcept()), null);
  }
  public boolean overrides() {
    return false;
  }
}
